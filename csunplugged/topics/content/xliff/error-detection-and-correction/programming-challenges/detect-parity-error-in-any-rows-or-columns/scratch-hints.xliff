<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file id="944" original="/csunplugged/topics/content/en/error-detection-and-correction/programming-challenges/detect-parity-error-in-any-rows-or-columns/scratch-hints.md" source-language="en" target-language="en-UD" datatype="plaintext">
    <body>
      <trans-unit id="10446" identifier="21ce6d71c6e12f134d63249aee4266a2">
        <source>For this challenge you need to use a list to store all the rows (each
item in the list is a row).</source>
        <target>crwdns10446:0crwdne10446:0</target>
        <note>Context: XPath: /ul/li/p</note>
      </trans-unit>
      <trans-unit id="10447" identifier="9e773742730a98ae83af60248801a6ec">
        <source>You then need to go through each item of your list and check if they have
an error (i.e. the total number of black cards in each row are odd).</source>
        <target>crwdns10447:0crwdne10447:0</target>
        <note>Context: XPath: /ul/li/p</note>
      </trans-unit>
      <trans-unit id="10448" identifier="8388f8f3dc53fda29a8a999f8a794cf8">
        <source>If there is a parity error in any of the rows you then need to store its
position in the list in a variable called “error in row”.</source>
        <target>crwdns10448:0crwdne10448:0</target>
        <note>Context: XPath: /ul/li/p</note>
      </trans-unit>
      <trans-unit id="10449" identifier="c04483b261e82697699eadfd89642376">
        <source>You then need to check if there are any parity errors in any of the
columns.</source>
        <target>crwdns10449:0crwdne10449:0</target>
        <note>Context: XPath: /ul/li[2]/p</note>
      </trans-unit>
      <trans-unit id="10450" identifier="1cd6efe6f1da9223579cd63c639e3ed3">
        <source>To check this for the first column you need to go through the first
letters of all the items in your list and check if the total number of
black cards are odd (i.e. there is a parity error in that column).</source>
        <target>crwdns10450:0crwdne10450:0</target>
        <note>Context: XPath: /ul/li[2]/p</note>
      </trans-unit>
      <trans-unit id="10451" identifier="25fb8c6fe2926c4cf77783d75d87df40">
        <source>You then need to repeat this for all the other columns.</source>
        <target>crwdns10451:0crwdne10451:0</target>
        <note>Context: XPath: /ul/li[2]/p</note>
      </trans-unit>
      <trans-unit id="10452" identifier="cd2b2be6f72895e47a4354e8d9d3c855">
        <source>If you find a parity error in any of the columns store it in a variable
called “error in column”</source>
        <target>crwdns10452:0crwdne10452:0</target>
        <note>Context: XPath: /ul/li[2]/p</note>
      </trans-unit>
      <trans-unit id="10453" identifier="9df430dad666f6ca997243fa679cec41">
        <source>Display the values for “error in row” and “error in column” at the end
of your program as the output.</source>
        <target>crwdns10453:0crwdne10453:0</target>
        <note>Context: Paragraph text&#13;
XPath: /ul/li[3]/p</note>
      </trans-unit>
      <trans-unit id="10454" identifier="cb9125d984d59ae99d73872d096d77be">
        <source>To make a new list select “Make a list” under “Data” script.</source>
        <target>crwdns10454:0crwdne10454:0</target>
        <note>Context: Paragraph text&#13;
XPath: /ul/li[4]/p</note>
      </trans-unit>
      <trans-unit id="10455" identifier="185079039bba4fb390dbcd156f4bfad7">
        <source>Add items to your list by using the &lt;code&gt;scratch:add () to [cards v]&lt;/code&gt; block.</source>
        <target>crwdns10455:0crwdne10455:0</target>
        <note>Context: Paragraph text&#13;
XPath: /ul/li[5]/p</note>
      </trans-unit>
      <trans-unit id="10456" identifier="89ed603c30e04694465139595d6aeeff">
        <source>You can access an item in a specific position in your list by using the
&lt;code&gt;scratch:item () of [cards v] :: list&lt;/code&gt; block.</source>
        <target>crwdns10456:0crwdne10456:0</target>
        <note>Context: Paragraph text&#13;
XPath: /ul/li[6]/p</note>
      </trans-unit>
      <trans-unit id="10457" identifier="b919bda6a5e44ecf005b8813b54652d3">
        <source>The &lt;code&gt;scratch:length of [cards v] :: list&lt;/code&gt; block reports how many items are
in the list.</source>
        <target>crwdns10457:0crwdne10457:0</target>
        <note>Context: Paragraph text&#13;
XPath: /ul/li[7]/p</note>
      </trans-unit>
      <trans-unit id="10458" identifier="e565dd379292d43345c8a933247cc40d">
        <source>You need to delete all the previous items from your list at the start of
your program.</source>
        <target>crwdns10458:0crwdne10458:0</target>
        <note>Context: XPath: /ul/li[8]/p</note>
      </trans-unit>
      <trans-unit id="10459" identifier="34967686a3fbe6c91a218ab757ef4563">
        <source>If you don’t do this, your new items get added to the list every time you
run your program.</source>
        <target>crwdns10459:0crwdne10459:0</target>
        <note>Context: XPath: /ul/li[8]/p</note>
      </trans-unit>
      <trans-unit id="10460" identifier="078e8633b85d54c2bce3e653c21b9b54">
        <source>To delete all the items from your list select “all” from the drop down
list on the &lt;code&gt;scratch:delete (all v) of [cards v]&lt;/code&gt; block.</source>
        <target>crwdns10460:0crwdne10460:0</target>
        <note>Context: XPath: /ul/li[8]/p</note>
      </trans-unit>
      <trans-unit id="10461" identifier="9c4faabb2ad4e00f5465d5948b8d6b3d">
        <source>You can access a letter at the specified position in a string by using
the &lt;code&gt;scratch:letter (1) of [world]&lt;/code&gt; block under “Operators”.</source>
        <target>crwdns10461:0[world]crwdne10461:0</target>
        <note>Context: XPath: /ul/li[9]/p</note>
      </trans-unit>
      <trans-unit id="10462" identifier="2cfe150975bf83264b16160937a92a69">
        <source>For example: &lt;code&gt;scratch:letter (1) of [world] //w&lt;/code&gt;</source>
        <target>crwdns10462:0[world]crwdne10462:0</target>
        <note>Context: XPath: /ul/li[9]/p</note>
      </trans-unit>
      <trans-unit id="10463" identifier="e306f22035b1a5491757c466520fb3ab">
        <source>In this challenge you need to access all the letters in user’s input
(each row of the parity trick) and check to see how many of them
are equal to B (black).</source>
        <target>crwdns10463:0crwdne10463:0</target>
        <note>Context: XPath: /ul/li[10]/p</note>
      </trans-unit>
      <trans-unit id="10464" identifier="528095509eb4c0ef0191da1bf989fd64">
        <source>Store the total number of black squares in a variable called
“black cards total”.</source>
        <target>crwdns10464:0crwdne10464:0</target>
        <note>Context: XPath: /ul/li[10]/p</note>
      </trans-unit>
      <trans-unit id="10465" identifier="8167dadc005a4b26379617e05b814bae">
        <source>You can find how many letters a string has by using the
&lt;code&gt;scratch:length of [world]&lt;/code&gt; block unders “Operators”.</source>
        <target>crwdns10465:0[world]crwdne10465:0</target>
        <note>Context: Paragraph text&#13;
XPath: /ul/li[11]/p</note>
      </trans-unit>
      <trans-unit id="10466" identifier="806a73f2a04c0d00ebc21e1a3a8ee79c">
        <source>To find out if a number is even or odd, use the &lt;code&gt;scratch:() mod ()&lt;/code&gt; block
(under &quot;Operators&quot;) to find the remainder after dividing that number by
two.</source>
        <target>crwdns10466:0crwdne10466:0</target>
        <note>Context: XPath: /ul/li[12]/p</note>
      </trans-unit>
      <trans-unit id="10467" identifier="54379aeb3b2157ba316d0432e16ae066">
        <source>If the remainder is zero the number is even.</source>
        <target>crwdns10467:0crwdne10467:0</target>
        <note>Context: XPath: /ul/li[12]/p</note>
      </trans-unit>
      <trans-unit id="10468" identifier="f5c810ec3e96971b538d0a21ea37bc5d">
        <source>For example: &lt;code&gt;scratch:(37) mod (10) //7&lt;/code&gt;</source>
        <target>crwdns10468:0crwdne10468:0</target>
        <note>Context: XPath: /ul/li[12]/p</note>
      </trans-unit>
    </body>
  </file>
</xliff>
