no-physical-zeros-ones:
  text: Justify why there aren’t actual 0’s and 1’s zooming around inside a computer.
  curriculum-areas:
    - computational-thinking

binary-correct-representation:
  text: Argue that 0’s and 1’s are still a correct way to represent what is stored in the computer.
  curriculum-areas:
    - computational-thinking

maths-comparing-numbers:
  text: Compare numbers
  curriculum-areas:
    - numeracy

programming-explain-sequencing:
  text: Explain how sequence works in programming
  curriculum-areas:
    - programming

programming-explain-output:
  text: Explain why a program gives the output that it does.
  curriculum-areas:
    - programming

programming-describe-variables:
  text: Describe how variables store values and how they are used in your program.
  curriculum-areas:
    - programming

programming-outline-variable-updates:
  text: Outline how storing values in a variable is updated because of the code you have used.
  curriculum-areas:
    - programming

programming-describe-variable-output:
  text: Describe how a variable can be displayed as an output.
  curriculum-areas:
    - programming

programming-identify-loop:
  text: Identify when to use a loop to repeat a set of instructions.
  curriculum-areas:
    - programming

programming-explain-join-concatenate:
  text: Explain how to concatenate (join) strings of characters together.
  curriculum-areas:
    - programming

programming-explain-asking-input-end-user:
  text: Explain what you need to consider if you are asking for an input from the end user.
  curriculum-areas:
    - programming

programming-identify-if-statement:
  text: Identify when to use an if statement to check a set of conditions.
  curriculum-areas:
    - programming

programming-prove-indexing:
  text: Demonstrate how indexing to access a letter at the specified position in a string works.
  curriculum-areas:
    - programming
